package main

import (
	"fmt"
	"time"
)

/**
*
* 【454. 四数相加 II】
🌀https://leetcode.cn/problems/4sum-ii/description/
*
* @author  sun
* @date 2022/11/5 10:51
*/
// 四层嵌套循环，时间复杂度为 O(N^4)，超时了……
func fourSumCountA(nums1 []int, nums2 []int, nums3 []int, nums4 []int) int {
	start := time.Now()
	ans := 0
	for i := 0; i < len(nums1); i++ {
		for j := 0; j < len(nums2); j++ {
			for a := 0; a < len(nums3); a++ {
				for b := 0; b < len(nums4); b++ {
					if nums1[i]+nums2[j]+nums3[a]+nums4[b] == 0 {
						ans++
					}
				}
			}
		}
	}
	fmt.Printf("Elapsed: %v\n", time.Now().Sub(start))
	return ans
}

// 三层嵌套循环 ➕查找表，时间复杂度为 O(N^3)，空间复杂度为 O(N)，超时了……
func fourSumCountB(nums1 []int, nums2 []int, nums3 []int, nums4 []int) int {
	start := time.Now()
	table, ans := make(map[int]int), 0
	for _, v := range nums4 {
		if c, has := table[v]; has {
			table[v] = c + 1
		} else {
			table[v] = 1
		}
	}
	for i := 0; i < len(nums1); i++ {
		for j := 0; j < len(nums2); j++ {
			for k := 0; k < len(nums3); k++ {
				key := 0 - (nums1[i] + nums2[j] + nums3[k])
				if v, has := table[key]; has {
					ans += v
				}
			}
		}
	}
	fmt.Printf("Elapsed: %v\n", time.Now().Sub(start))
	return ans
}

// 两层嵌套循环 ➕查找表，时间复杂度为 O(N^2)，空间复杂度为 O(N^2)
func fourSumCountC(nums1 []int, nums2 []int, nums3 []int, nums4 []int) int {
	start := time.Now()
	table, ans := make(map[int]int), 0
	for _, v3 := range nums3 {
		for _, v4 := range nums4 {
			sum := v3 + v4
			if value, has := table[sum]; has {
				table[sum] = value + 1
			} else {
				table[sum] = 1
			}
		}
	}
	for _, v1 := range nums1 {
		for _, v2 := range nums2 {
			sum := 0 - (v1 + v2)
			if value, has := table[sum]; has {
				ans += value
			}
		}
	}
	fmt.Printf("Elapsed: %v\n", time.Now().Sub(start))
	return ans
}

func main() {
	fmt.Println(
		fourSumCountA(
			[]int{-23, 9, -29, -8, 10, 9, 8, -12, 7, -17, 2, -8, -19, -4, -25, -26, -11, 9, 3, 2, 1, 7, -7, -9, -21, -23, -31, -16, -15, -23, -11, -12, -32, -4, -23, -14, -23, -20, -14, -31, -16, -29, -7, -7, -9, -20, -20, 4, -6, -26, -28, -21, 9, 4, -6, 8, -25, -30, -5, -3, -10, -13, -27, -14, -32, -13, 6, -3, 1, -24, -24, -21, -18, -30, 8, -29, -23, -21, -8, -21, -9, -8, -25, 5, 0, 0, 4, -2, -5, -4, 6, -23, -5, 0, -10, -19, -18, -12, 2, -27},
			[]int{-3, -22, 7, -12, 3, -29, -25, -22, -15, 8, 6, -16, -18, 8, 1, -4, 4, -23, -25, -2, -14, -8, 1, 1, -17, -12, -3, -9, -3, 8, -3, -12, 3, -31, -25, -18, -4, -26, -7, 7, 3, 4, 6, -12, 3, -3, 5, -25, -26, -10, -9, -26, -6, -32, -3, 9, -29, -11, -29, -7, -8, -29, -24, 0, -22, -4, 4, -26, -22, 2, 4, -4, -2, -21, -4, -23, -11, 6, 0, 3, 5, -23, -21, -8, -14, -25, 2, -7, -29, -6, -18, -12, -3, 4, -4, -9, -1, -6, -27, 5},
			[]int{-13, -28, -1, 5, -9, -32, -6, -1, 3, -21, -6, -14, -12, -11, -18, -17, -4, -24, 9, -11, -28, -23, -31, -29, 2, -25, -25, 6, 1, -29, 2, 5, -27, -23, -26, -32, 9, 2, -14, 1, -9, 0, -14, -31, 5, -19, -1, -26, 6, -14, -23, 2, -14, -4, -2, -3, -12, -25, -6, 7, -12, -13, -1, -5, -11, 2, -20, -6, 9, 10, 7, -8, -19, -12, -5, -11, -14, 9, -19, -23, -2, -31, -24, -15, 5, -25, -14, -22, -9, -29, -31, -24, -18, -15, 0, -31, -27, -10, 7, -2},
			[]int{3, -10, -31, -12, -12, 1, -10, 1, -10, -31, -32, 8, -16, 4, -13, -4, -9, -11, 0, -23, -6, -9, 8, 3, -23, -4, 5, -19, 10, -2, -28, -6, -7, -17, -22, -24, 1, -8, 0, -10, 3, -29, -12, -25, 8, 1, -31, -19, -21, 5, -2, -9, -16, 4, -28, -15, -17, -17, -28, -6, -11, -8, -16, -8, -32, -18, -27, -27, 1, 10, -27, 0, 5, -10, 7, -26, -10, -20, 8, -18, -9, 7, 0, 7, -29, 2, -17, 0, -26, -11, 9, -16, -32, 1, 6, -32, -20, -4, 5, 7},
		), // 399951
	)

	fmt.Println(
		fourSumCountB([]int{1, 2}, []int{-2, -1}, []int{-1, 2}, []int{0, 2}),                           // 2
		fourSumCountB([]int{1, 1, 2, 2}, []int{-2, -1, -1, -2}, []int{-1, 2, 2, 0}, []int{0, 2, 4, 5}), // 16
		fourSumCountB(
			[]int{-23, 9, -29, -8, 10, 9, 8, -12, 7, -17, 2, -8, -19, -4, -25, -26, -11, 9, 3, 2, 1, 7, -7, -9, -21, -23, -31, -16, -15, -23, -11, -12, -32, -4, -23, -14, -23, -20, -14, -31, -16, -29, -7, -7, -9, -20, -20, 4, -6, -26, -28, -21, 9, 4, -6, 8, -25, -30, -5, -3, -10, -13, -27, -14, -32, -13, 6, -3, 1, -24, -24, -21, -18, -30, 8, -29, -23, -21, -8, -21, -9, -8, -25, 5, 0, 0, 4, -2, -5, -4, 6, -23, -5, 0, -10, -19, -18, -12, 2, -27},
			[]int{-3, -22, 7, -12, 3, -29, -25, -22, -15, 8, 6, -16, -18, 8, 1, -4, 4, -23, -25, -2, -14, -8, 1, 1, -17, -12, -3, -9, -3, 8, -3, -12, 3, -31, -25, -18, -4, -26, -7, 7, 3, 4, 6, -12, 3, -3, 5, -25, -26, -10, -9, -26, -6, -32, -3, 9, -29, -11, -29, -7, -8, -29, -24, 0, -22, -4, 4, -26, -22, 2, 4, -4, -2, -21, -4, -23, -11, 6, 0, 3, 5, -23, -21, -8, -14, -25, 2, -7, -29, -6, -18, -12, -3, 4, -4, -9, -1, -6, -27, 5},
			[]int{-13, -28, -1, 5, -9, -32, -6, -1, 3, -21, -6, -14, -12, -11, -18, -17, -4, -24, 9, -11, -28, -23, -31, -29, 2, -25, -25, 6, 1, -29, 2, 5, -27, -23, -26, -32, 9, 2, -14, 1, -9, 0, -14, -31, 5, -19, -1, -26, 6, -14, -23, 2, -14, -4, -2, -3, -12, -25, -6, 7, -12, -13, -1, -5, -11, 2, -20, -6, 9, 10, 7, -8, -19, -12, -5, -11, -14, 9, -19, -23, -2, -31, -24, -15, 5, -25, -14, -22, -9, -29, -31, -24, -18, -15, 0, -31, -27, -10, 7, -2},
			[]int{3, -10, -31, -12, -12, 1, -10, 1, -10, -31, -32, 8, -16, 4, -13, -4, -9, -11, 0, -23, -6, -9, 8, 3, -23, -4, 5, -19, 10, -2, -28, -6, -7, -17, -22, -24, 1, -8, 0, -10, 3, -29, -12, -25, 8, 1, -31, -19, -21, 5, -2, -9, -16, 4, -28, -15, -17, -17, -28, -6, -11, -8, -16, -8, -32, -18, -27, -27, 1, 10, -27, 0, 5, -10, 7, -26, -10, -20, 8, -18, -9, 7, 0, 7, -29, 2, -17, 0, -26, -11, 9, -16, -32, 1, 6, -32, -20, -4, 5, 7},
		), // 399951
	)

	fmt.Println(
		fourSumCountC([]int{1, 2}, []int{-2, -1}, []int{-1, 2}, []int{0, 2}),                           // 2
		fourSumCountC([]int{1, 1, 2, 2}, []int{-2, -1, -1, -2}, []int{-1, 2, 2, 0}, []int{0, 2, 4, 5}), // 16
		fourSumCountC(
			[]int{-23, 9, -29, -8, 10, 9, 8, -12, 7, -17, 2, -8, -19, -4, -25, -26, -11, 9, 3, 2, 1, 7, -7, -9, -21, -23, -31, -16, -15, -23, -11, -12, -32, -4, -23, -14, -23, -20, -14, -31, -16, -29, -7, -7, -9, -20, -20, 4, -6, -26, -28, -21, 9, 4, -6, 8, -25, -30, -5, -3, -10, -13, -27, -14, -32, -13, 6, -3, 1, -24, -24, -21, -18, -30, 8, -29, -23, -21, -8, -21, -9, -8, -25, 5, 0, 0, 4, -2, -5, -4, 6, -23, -5, 0, -10, -19, -18, -12, 2, -27},
			[]int{-3, -22, 7, -12, 3, -29, -25, -22, -15, 8, 6, -16, -18, 8, 1, -4, 4, -23, -25, -2, -14, -8, 1, 1, -17, -12, -3, -9, -3, 8, -3, -12, 3, -31, -25, -18, -4, -26, -7, 7, 3, 4, 6, -12, 3, -3, 5, -25, -26, -10, -9, -26, -6, -32, -3, 9, -29, -11, -29, -7, -8, -29, -24, 0, -22, -4, 4, -26, -22, 2, 4, -4, -2, -21, -4, -23, -11, 6, 0, 3, 5, -23, -21, -8, -14, -25, 2, -7, -29, -6, -18, -12, -3, 4, -4, -9, -1, -6, -27, 5},
			[]int{-13, -28, -1, 5, -9, -32, -6, -1, 3, -21, -6, -14, -12, -11, -18, -17, -4, -24, 9, -11, -28, -23, -31, -29, 2, -25, -25, 6, 1, -29, 2, 5, -27, -23, -26, -32, 9, 2, -14, 1, -9, 0, -14, -31, 5, -19, -1, -26, 6, -14, -23, 2, -14, -4, -2, -3, -12, -25, -6, 7, -12, -13, -1, -5, -11, 2, -20, -6, 9, 10, 7, -8, -19, -12, -5, -11, -14, 9, -19, -23, -2, -31, -24, -15, 5, -25, -14, -22, -9, -29, -31, -24, -18, -15, 0, -31, -27, -10, 7, -2},
			[]int{3, -10, -31, -12, -12, 1, -10, 1, -10, -31, -32, 8, -16, 4, -13, -4, -9, -11, 0, -23, -6, -9, 8, 3, -23, -4, 5, -19, 10, -2, -28, -6, -7, -17, -22, -24, 1, -8, 0, -10, 3, -29, -12, -25, 8, 1, -31, -19, -21, 5, -2, -9, -16, 4, -28, -15, -17, -17, -28, -6, -11, -8, -16, -8, -32, -18, -27, -27, 1, 10, -27, 0, 5, -10, 7, -26, -10, -20, 8, -18, -9, 7, 0, 7, -29, 2, -17, 0, -26, -11, 9, -16, -32, 1, 6, -32, -20, -4, 5, 7},
		), // 399951
	)
}
